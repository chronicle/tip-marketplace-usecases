{"Name":"Ping","Description":"Test Connectivity","Script":"from SiemplifyUtils import output_handler\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED\nfrom SiemplifyAction import SiemplifyAction\nfrom TIPCommon import extract_configuration_param\nfrom SlackManager import SlackManager, SlackManagerException\nfrom TIPCommon import extract_configuration_param\n\nSCRIPT_NAME = u'Slack Custom - Ping'\nPROVIDER_NAME = u'Slack Custom'\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n    siemplify.LOGGER.info(u\"----------------- Main - Param Init -----------------\")\n\n    api_token = extract_configuration_param(\n        siemplify,\n        provider_name=PROVIDER_NAME,\n        param_name=\"ApiToken\",\n        input_type=unicode\n    )\n\n    verify_ssl = extract_configuration_param(\n        siemplify,\n        provider_name=PROVIDER_NAME,\n        param_name=\"Verify SSL\",\n        input_type=bool\n    )\n\n    siemplify.LOGGER.info(u\"----------------- Main - Started -----------------\")\n\n    try:\n        slack_manager = SlackManager(api_token, verify_ssl)\n        slack_manager.test_connectivity()\n        output_message = u'Connection to Slack established successfully.'\n        result = 'true'\n        status = EXECUTION_STATE_COMPLETED\n        siemplify.LOGGER.info(u'Script Name: {} | {}'.format(SCRIPT_NAME, output_message))\n    except SlackManagerException as e:\n        output_message = u'An error occurred when trying to connect to the API: {}'.format(e)\n        result = 'false'\n        status = EXECUTION_STATE_FAILED\n        siemplify.LOGGER.error(u'Script Name: {} | {}'.format(SCRIPT_NAME, output_message))\n        siemplify.LOGGER.exception(e)\n\n    siemplify.LOGGER.info(u\"----------------- Main - Finished -----------------\")\n    siemplify.LOGGER.info(u'Status: {}'.format(status))\n    siemplify.LOGGER.info(u'Result: {}'.format(result))\n    siemplify.LOGGER.info(u'Output Message: {}'.format(output_message))\n\n    siemplify.end(output_message, result, status)\n\n\nif __name__ == '__main__':\n    main()\n","IntegrationIdentifier":"Slack Custom","ScriptResultName":"ScriptResult","DynamicResultsMetadata":[{"ResultName":"JsonResult","ResultExample":"{}","ShowResult":true}],"Creator":"dec3622d-33b8-458e-9bcd-372744fc68d4","IsEnabled":false,"IsCustom":true,"IsSystem":false,"Version":3.0,"TimeoutSeconds":300,"IsAsync":false,"AsyncPollingIntervalInSeconds":30,"TotalIntervalTimeoutForAsyncInSeconds":86400,"Parameters":[],"DefaultResultValue":"","PythonVersion":"None","SimulationData":{"Entities":null},"SimulationDataJson":null}