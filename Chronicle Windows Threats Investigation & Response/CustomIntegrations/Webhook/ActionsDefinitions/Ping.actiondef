{"Name":"Ping","Description":"Tests connectivity to the product.","Script":"from WebhookManager import WebhookManager\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import unix_now, convert_unixtime_to_datetime, output_handler\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED,EXECUTION_STATE_TIMEDOUT\n\n# Consts:\nINTEGRATION_NAME = \"Webhook\"\nSCRIPT_NAME = \"Ping\"\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n    siemplify.LOGGER.info(\"================= Main - Param Init =================\")\n    \n    # Init integration params:\n    conf = siemplify.get_configuration(INTEGRATION_NAME)\n    baseUrl = conf.get(\"URL\")\n\n    # Create manager instance for methods:\n    webhookManager = WebhookManager(baseUrl)\n    \n    # Init result values:\n    status = EXECUTION_STATE_FAILED\n    output_message = \"The connection failed.\"\n    return_value = False\n    \n    try:\n        response = webhookManager.test_connectivity()\n        return_value = True\n        output_message = f'Connected successfully to <{baseUrl}>'\n        \n    except:\n        siemplify.LOGGER.error(e)\n        output_message += \" Error: \" + str(e)\n    \n    finally:\n        siemplify.LOGGER.info(\"----------------- Main - Finished -----------------\")\n        siemplify.LOGGER.info(\"status: {}\\nresult_value: {}\\noutput_message: {}\".format(status, return_value, output_message))\n        siemplify.end(output_message, return_value, status)\n\n\nif __name__ == \"__main__\":\n    main()\n\n","IntegrationIdentifier":"Webhook","ScriptResultName":"ScriptResult","DynamicResultsMetadata":[{"ResultName":"JsonResult","ResultExample":"{}","ShowResult":true}],"Creator":"shakedalontest","IsEnabled":false,"IsCustom":true,"IsSystem":false,"Version":22.0,"TimeoutSeconds":300,"IsAsync":null,"AsyncPollingIntervalInSeconds":3600,"TotalIntervalTimeoutForAsyncInSeconds":86400,"Parameters":[],"DefaultResultValue":"","PythonVersion":"None","SimulationData":{"Entities":null},"SimulationDataJson":null}