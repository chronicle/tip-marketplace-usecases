{"Name":"Get Webhook Response","Description":"Fetch data of requests for the URL: {Base URL}/{Token ID}","Script":"from WebhookManager import WebhookManager\nfrom SiemplifyAction import SiemplifyAction\nfrom SiemplifyUtils import output_handler\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_FAILED, EXECUTION_STATE_TIMEDOUT, \\\n    EXECUTION_STATE_INPROGRESS\n\nimport sys\nimport time\nimport json\n\n\ndef seconds(timeframe_minutes):\n    return 60 * timeframe_minutes\n\n\n# Consts:\nINTEGRATION_NAME = \"Webhook\"\nSCRIPT_NAME = \"Get Webhook Response\"\n\n\n@output_handler\ndef main(is_first_run):\n    siemplify = SiemplifyAction()\n    siemplify.script_name = SCRIPT_NAME\n\n    siemplify.LOGGER.info(\"================= Main - Param Init =================\")\n\n    # Extract Integration params:\n    conf = siemplify.get_configuration(INTEGRATION_NAME)\n    baseUrl = conf.get(\"URL\")\n\n    # INIT ACTION PARAMETERS:\n    token_id = siemplify.extract_action_param(param_name=\"Token ID\").strip()\n    responses_choice = siemplify.extract_action_param(\n        param_name=\"Responses To Retrieve\").lower().strip()  # ALL or LATEST\n    custom_timeframe = float(siemplify.extract_action_param(param_name=\"TimeFrame\").strip())\n    condition_type = siemplify.extract_action_param(param_name=\"Pending Condition\")  # TIMEFRAME or AWAITCLICK\n\n    # Init result json:\n    res_json = {}\n    # Init result values:\n    status = EXECUTION_STATE_FAILED\n    output_message = f'Could not fetch information regarding token ID <{token_id}>'\n    result_value = False\n    # Init json for run parameters:\n    runs_params_json = {}\n    # Create manager instance for methods:\n    webhookManager = WebhookManager(baseUrl)\n\n    siemplify.LOGGER.info(\"================= Main - Started ====================\")\n\n    if is_first_run:\n        if condition_type == \"TimeFrame\":\n            timeframe = seconds(custom_timeframe)\n            start_time = time.time()\n\n    try:\n        # Fetch info:\n        if condition_type == \"TimeFrame\":\n            if not is_first_run:\n                runs_params_json = json.loads(siemplify.parameters[u\"additional_data\"])\n                start_time = runs_params_json.get(\"start_time\")\n                timeframe = runs_params_json.get(\"timeframe\")\n            curr_time = time.time()\n            duration = curr_time - start_time\n            if duration >= timeframe:  # finished timeframe\n                res_json = webhookManager.get_requests(token_id, responses_choice)  # only call once.\n                status = EXECUTION_STATE_COMPLETED\n                if len(res_json.get(\"data\")) > 0:\n                    output_message = f'Fetched requests for token ID <{token_id}> after listenning <{custom_timeframe}> minutes.'\n                else:\n                    output_message = f'After waiting <{custom_timeframe}> No requests were found'\n                result_value = True\n            else:  # Timeframe not finished\n                status = EXECUTION_STATE_INPROGRESS\n                output_message = f'Awaiting Timout: <{custom_timeframe}> minutes. Time passed: <{duration}> seconds.'\n                result_value = json.dumps({\"timeframe\": timeframe, \"start_time\": start_time})\n\n        if condition_type == \"AwaitClick\":\n            res_json = webhookManager.get_requests(token_id, responses_choice)\n            if len(res_json.get(\"data\")) > 0:  # Click happened\n                status = EXECUTION_STATE_COMPLETED\n                output_message = f'Successfully fetched first requests for token ID <{token_id}>'\n                result_value = True\n            else:\n                status = EXECUTION_STATE_INPROGRESS\n                output_message = f'Still waiting for first request for token ID <{token_id}>'\n                result_value = True\n\n    except Exception as e:\n        siemplify.LOGGER.error(e)\n        status = EXECUTION_STATE_FAILED\n        output_message = f'Could not fetch information regarding token ID <{token_id}> ' + str(e)\n        result_value = False\n        raise Exception(e)\n\n    finally:\n        siemplify.LOGGER.info(\n            \"\\n  status: {}\\n  result_value: {}\\n  output_message: {}\".format(status, result_value, output_message))\n        siemplify.result.add_result_json(res_json)\n        siemplify.end(output_message, result_value, status)\n\n\nif __name__ == \"__main__\":\n    is_first_run = len(sys.argv) < 3 or sys.argv[2] == u'True'\n    main(is_first_run)\n","IntegrationIdentifier":"Webhook","ScriptResultName":"ScriptResult","DynamicResultsMetadata":[{"ResultName":"JsonResult","ResultExample":"{\n  \"requests_type\": \"all\",\n  \"data\": [\n    {\n      \"uuid\": \"6ddee14c-24fb-4d0b-9935-4f98ba6e1154\",\n      \"type\": \"web\",\n      \"token_id\": \"9ed2d078-a4c5-43e1-b4df-a13216b28880\",\n      \"ip\": \"2a00:a040:18b:a750:7d6f:cb5e:7429:9954\",\n      \"hostname\": \"webhook.site\",\n      \"method\": \"GET\",\n      \"user_agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\",\n      \"content\": \"\",\n      \"query\": {\n        \"answer\": \"No\"\n      },\n      \"headers\": {\n        \"connection\": [\n          \"close\"\n        ],\n        \"cookie\": [\n          \"_ga=GA1.2.649972760.1629009059; laravel_session=ZPOdEUcNuJVptxdDI0TD4KeLTh9NYsbeuBzKyaS2; _gid=GA1.2.1103043972.1630219432; io=Wd4KThVKkUKhiW0eEExZ; _gat=1; XSRF-TOKEN=eyJpdiI6ImRuOXZoM1BCTjdPd0tHT3NPTGVZZXc9PSIsInZhbHVlIjoiSThSQ1wvUlFaWUlRdjJMcEVqRDBMUGZQYlprNjZ1TSsrcDVkMVNKSlwvV0ZVYTZybFhHS0ZDN0lTclI2MEI0WDg5IiwibWFjIjoiMzNlOTdhZjJmYTE3NjU4MGUxZjA3YjM4YzQzMjFkOGMwY2JiN2E4NTNjZTM1OGNiNTcyOGU0YTI5NzU1YmZhYSJ9\"\n        ],\n        \"accept-language\": [\n          \"en-US,en;q=0.9\"\n        ],\n        \"accept-encoding\": [\n          \"gzip, deflate, br\"\n        ],\n        \"referer\": [\n          \"https://webhook.site/\"\n        ],\n        \"sec-fetch-dest\": [\n          \"document\"\n        ],\n        \"sec-fetch-user\": [\n          \"?1\"\n        ],\n        \"sec-fetch-mode\": [\n          \"navigate\"\n        ],\n        \"sec-fetch-site\": [\n          \"same-origin\"\n        ],\n        \"accept\": [\n          \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\"\n        ],\n        \"user-agent\": [\n          \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"\n        ],\n        \"upgrade-insecure-requests\": [\n          \"1\"\n        ],\n        \"sec-ch-ua-mobile\": [\n          \"?0\"\n        ],\n        \"sec-ch-ua\": [\n          \"'Chromium';v = '92', ' Not A;Brand';v = '99', 'Google Chrome';v = '92'\"\n        ],\n        \"host\": [\n          \"webhook.site\"\n        ],\n        \"content-length\": [\n          \"\"\n        ],\n        \"content-type\": [\n          \"\"\n        ]\n      },\n      \"url\": \"https://webhook.site/9ed2d078-a4c5-43e1-b4df-a13216b28880\",\n      \"size\": 0,\n      \"files\": [],\n      \"created_at\": \"2021-08-29 08:18:56\",\n      \"updated_at\": \"2021-08-29 08:18:56\",\n      \"sorting\": 1630225136454993,\n      \"custom_action_output\": []\n    },\n    {\n      \"uuid\": \"47ecad4d-2aaf-48c4-a034-440599dde882\",\n      \"type\": \"web\",\n      \"token_id\": \"9ed2d078-a4c5-43e1-b4df-a13216b28880\",\n      \"ip\": \"2a00:a040:18b:a750:7d6f:cb5e:7429:9954\",\n      \"hostname\": \"webhook.site\",\n      \"method\": \"GET\",\n      \"user_agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\",\n      \"content\": \"\",\n      \"query\": {\n        \"answer\": \"Yes\"\n      },\n      \"headers\": {\n        \"connection\": [\n          \"close\"\n        ],\n        \"cookie\": [\n          \"_ga=GA1.2.649972760.1629009059; laravel_session=ZPOdEUcNuJVptxdDI0TD4KeLTh9NYsbeuBzKyaS2; _gid=GA1.2.1103043972.1630219432; io=Wd4KThVKkUKhiW0eEExZ; _gat=1; XSRF-TOKEN=eyJpdiI6ImRuOXZoM1BCTjdPd0tHT3NPTGVZZXc9PSIsInZhbHVlIjoiSThSQ1wvUlFaWUlRdjJMcEVqRDBMUGZQYlprNjZ1TSsrcDVkMVNKSlwvV0ZVYTZybFhHS0ZDN0lTclI2MEI0WDg5IiwibWFjIjoiMzNlOTdhZjJmYTE3NjU4MGUxZjA3YjM4YzQzMjFkOGMwY2JiN2E4NTNjZTM1OGNiNTcyOGU0YTI5NzU1YmZhYSJ9\"\n        ],\n        \"accept-language\": [\n          \"en-US,en;q=0.9\"\n        ],\n        \"accept-encoding\": [\n          \"gzip, deflate, br\"\n        ],\n        \"sec-fetch-dest\": [\n          \"document\"\n        ],\n        \"sec-fetch-user\": [\n          \"?1\"\n        ],\n        \"sec-fetch-mode\": [\n          \"navigate\"\n        ],\n        \"sec-fetch-site\": [\n          \"none\"\n        ],\n        \"accept\": [\n          \"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\"\n        ],\n        \"user-agent\": [\n          \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\"\n        ],\n        \"upgrade-insecure-requests\": [\n          \"1\"\n        ],\n        \"sec-ch-ua-mobile\": [\n          \"?0\"\n        ],\n        \"sec-ch-ua\": [\n          \"'Chromium': = '92', ' Not A;Brand': = '99', 'Google Chrome': = '92'\"\n        ],\n        \"host\": [\n          \"webhook.site\"\n        ],\n        \"content-length\": [\n          \"\"\n        ],\n        \"content-type\": [\n          \"\"\n        ]\n      },\n      \"url\": \"https://webhook.site/9ed2d078-a4c5-43e1-b4df-a13216b28880?name=Shir.Savion\",\n      \"size\": 0,\n      \"files\": [],\n      \"created_at\": \"2021-08-29 08:19:05\",\n      \"updated_at\": \"2021-08-29 08:19:05\",\n      \"sorting\": 1630225145943913,\n      \"custom_action_output\": []\n    }\n  ],\n  \"total\": 2,\n  \"per_page\": 50,\n  \"current_page\": 1,\n  \"is_last_page\": true,\n  \"from\": 1,\n  \"to\": 2\n}","ShowResult":true}],"Creator":"community","IsEnabled":true,"IsCustom":true,"IsSystem":false,"Version":209.0,"TimeoutSeconds":600,"IsAsync":true,"AsyncPollingIntervalInSeconds":30,"TotalIntervalTimeoutForAsyncInSeconds":86400,"Parameters":[{"CustomActionId":0,"IsMandatory":true,"DefaultValue":"TimeFrame","Description":"TimeFrame - Choose the custom timeout condition.\nAwaitClick - Wait for first click before ending script.","Name":"Pending Condition","Value":"TimeFrame","Type":15,"OptionalValues":["AwaitClick","TimeFrame"],"OptionalValuesJson":"[\"AwaitClick\",\"TimeFrame\"]"},{"CustomActionId":0,"IsMandatory":true,"DefaultValue":"5","Description":"Minutes to wait for requests for URL (by token ID), before ending the action.\nRelevant only if \"Timeout\" is chosen as parameter.","Name":"TimeFrame","Value":"5","Type":0,"OptionalValues":null,"OptionalValuesJson":null},{"CustomActionId":0,"IsMandatory":true,"DefaultValue":"All","Description":"Choose All to retrieve all responses data, or Latest to retrieve only the latest responses data.","Name":"Responses To Retrieve","Value":"All","Type":15,"OptionalValues":["Latest","All"],"OptionalValuesJson":"[\"Latest\",\"All\"]"},{"CustomActionId":0,"IsMandatory":true,"DefaultValue":"111","Description":"The ID of the token to read requests for","Name":"Token ID","Value":"111","Type":0,"OptionalValues":null,"OptionalValuesJson":null}],"DefaultResultValue":"","PythonVersion":"None","SimulationData":{"Entities":null},"SimulationDataJson":null}