{
  "Name": "Get Events For Endpoint Hours Back",
  "Description": "Get the latest events for the endpoint.",
  "Script": "from SiemplifyUtils import output_handler, convert_dict_to_json_result_dict, unix_now\nfrom SiemplifyAction import SiemplifyAction\nfrom SentinelOneV2Manager import SentinelOneV2Manager, SentinelOneV2NotFoundError\nfrom SiemplifyDataModel import EntityTypes\nfrom ScriptResult import EXECUTION_STATE_COMPLETED, EXECUTION_STATE_INPROGRESS, EXECUTION_STATE_FAILED\nfrom TIPCommon import extract_configuration_param, extract_action_param, construct_csv\nimport sys\nimport base64\nimport arrow\nimport json\nimport ntpath\nimport os\n\nINTEGRATION_NAME = u\"SentinelOneV2\"\nSCRIPT_NAME = u\"Get Events For Endpoint Hours Back\"\nSUPPORTED_ENTITIES = [EntityTypes.ADDRESS, EntityTypes.HOSTNAME]\n\n\n@output_handler\ndef main():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = u\"{} - {}\".format(INTEGRATION_NAME, SCRIPT_NAME)\n    siemplify.LOGGER.info(u\"================= Main - Param Init =================\")\n\n    api_root = extract_configuration_param(siemplify, provider_name=INTEGRATION_NAME, param_name=u\"Api Root\",\n                                           is_mandatory=True, input_type=unicode)\n    api_token = extract_configuration_param(siemplify, provider_name=INTEGRATION_NAME, param_name=u\"API Token\",\n                                            is_mandatory=True, input_type=unicode)\n    verify_ssl = extract_configuration_param(siemplify, provider_name=INTEGRATION_NAME, param_name=u\"Verify SSL\",\n                                             default_value=False, input_type=bool)\n\n    delta_in_hours = extract_action_param(siemplify, param_name=u\"Hours Back\", is_mandatory=False, input_type=int,\n                                          print_value=True, default_value=1)\n\n    siemplify.LOGGER.info(u\"----------------- Main - Started -----------------\")\n\n    successful_entities = []\n    query_ids = {}\n    missing_entities = []\n    failed_entities = []\n    output_message = u\"\"\n\n    from_date_unixtime = arrow.utcnow().shift(hours=-delta_in_hours).timestamp * 1000\n\n    try:\n        sentinel_one_manager = SentinelOneV2Manager(api_root, api_token, verify_ssl)\n\n        for entity in siemplify.target_entities:\n            try:\n                if entity.entity_type not in SUPPORTED_ENTITIES:\n                    siemplify.LOGGER.info(u\"Entity {} is of unsupported type. Skipping.\".format(entity.identifier))\n                    continue\n\n                siemplify.LOGGER.info(u\"Started processing entity: {}\".format(entity.identifier))\n                agent = None\n\n                if entity.entity_type == EntityTypes.HOSTNAME:\n                    try:\n                        siemplify.LOGGER.info(u\"Fetching agent for hostname {}\".format(entity.identifier))\n                        agent = sentinel_one_manager.get_agent_by_hostname(entity.identifier)\n                    except SentinelOneV2NotFoundError as e:\n                        # Agent was not found in SentinelOne - skip entity\n                        missing_entities.append(entity.identifier)\n                        siemplify.LOGGER.info(unicode(e))\n                        siemplify.LOGGER.info(u\"Skipping entity {}\".format(entity.identifier))\n                        continue\n\n                if entity.entity_type == EntityTypes.ADDRESS:\n                    try:\n                        siemplify.LOGGER.info(u\"Fetching agent for address {}\".format(entity.identifier))\n                        agent = sentinel_one_manager.get_agent_by_ip(entity.identifier)\n                    except SentinelOneV2NotFoundError as e:\n                        # Agent was not found in SentinelOne - skip entity\n                        missing_entities.append(entity.identifier)\n                        siemplify.LOGGER.info(unicode(e))\n                        siemplify.LOGGER.info(u\"Skipping entity {}\".format(entity.identifier))\n                        continue\n\n                query_id = sentinel_one_manager.initialize_get_events_for_agent_query(\n                    agent_uuid=agent.uuid,\n                    from_date=from_date_unixtime,\n                    to_date=unix_now()\n                )\n\n                siemplify.LOGGER.info(\n                    u\"Successfully initialized events fetching query {0} for {1}\".format(query_id, entity.identifier)\n                )\n\n                query_ids[entity.identifier] = query_id\n                successful_entities.append(entity.identifier)\n\n            except Exception as e:\n                failed_entities.append(entity.identifier)\n                siemplify.LOGGER.error(u\"An error occurred on entity {0}\".format(entity.identifier))\n                siemplify.LOGGER.exception(e)\n\n        if successful_entities:\n            output_message += u\"Successfully initiated events fetching query on the following entities:\\n   {}\".format(\n                u\"\\n   \".join([entity for entity in successful_entities])\n            )\n            result_value = json.dumps({\n                u\"query_ids\": query_ids,\n                u\"successful_entities\": successful_entities,\n                u\"missing_entities\": missing_entities,\n                u\"failed_entities\": failed_entities\n            })\n            status = EXECUTION_STATE_INPROGRESS\n\n        else:\n            output_message = u\"No suitable endpoints were found.\"\n            result_value = u\"false\"\n            status = EXECUTION_STATE_COMPLETED\n\n        if missing_entities:\n            output_message += u\"\\n\\nThe following entities didn't match any agents and were skipped:\\n   {}\".format(\n                u\"\\n   \".join([entity for entity in missing_entities])\n            )\n\n        if failed_entities:\n            output_message += u\"\\n\\nError occurred while initiating events fetching query on the following entities:\\n   {}\".format(\n                u\"\\n   \".join([entity for entity in failed_entities])\n            )\n\n        if successful_entities:\n            output_message += u\"\\n\\nWaiting for tasks to complete.\"\n\n    except Exception as e:\n        siemplify.LOGGER.error(u\"Error executing action \\\"Get Events For Endpoint Hours Back\\\". Reason: {}\".format(e))\n        siemplify.LOGGER.exception(e)\n        status = EXECUTION_STATE_FAILED\n        result_value = u\"false\"\n        output_message = u\"Error executing action \\\"Get Events For Endpoint Hours Back\\\". Reason: {}\".format(e)\n\n    siemplify.LOGGER.info(u\"----------------- Main - Finished -----------------\")\n    siemplify.LOGGER.info(u\"Status: {}:\".format(status))\n    siemplify.LOGGER.info(u\"Result Value: {}\".format(result_value))\n    siemplify.LOGGER.info(u\"Output Message: {}\".format(output_message))\n    siemplify.end(output_message, result_value, status)\n\n\ndef async_action():\n    siemplify = SiemplifyAction()\n    siemplify.script_name = u\"{} - {}\".format(INTEGRATION_NAME, SCRIPT_NAME)\n    siemplify.LOGGER.info(u\"================= Async - Param Init =================\")\n\n    api_root = extract_configuration_param(siemplify, provider_name=INTEGRATION_NAME, param_name=u\"Api Root\",\n                                           is_mandatory=True, input_type=unicode)\n    api_token = extract_configuration_param(siemplify, provider_name=INTEGRATION_NAME, param_name=u\"API Token\",\n                                            is_mandatory=True, input_type=unicode)\n    verify_ssl = extract_configuration_param(siemplify, provider_name=INTEGRATION_NAME, param_name=u\"Verify SSL\",\n                                             default_value=False, input_type=bool)\n\n    limit = extract_action_param(siemplify, param_name=u\"Events Amount Limit\", is_mandatory=False, default_value=50,\n                                 input_type=int, print_value=True)\n    include_file_events_info = extract_action_param(siemplify, param_name=u\"Include File Events Information\",\n                                                    is_mandatory=False, default_value=False,\n                                                    input_type=bool, print_value=True)\n    include_indicator_events_info = extract_action_param(siemplify, param_name=u\"Include Indicator Events Information\",\n                                                         is_mandatory=False, default_value=False,\n                                                         input_type=bool, print_value=True)\n    include_dns_events_info = extract_action_param(siemplify, param_name=u\"Include DNS Events Information\",\n                                                   is_mandatory=False, default_value=False,\n                                                   input_type=bool, print_value=True)\n    include_network_actions_events_info = extract_action_param(siemplify,\n                                                               param_name=u\"Include Network Actions Events Information\",\n                                                               is_mandatory=False, default_value=False,\n                                                               input_type=bool, print_value=True)\n    include_url_events_info = extract_action_param(siemplify, param_name=u\"Include URL Events Information\",\n                                                   is_mandatory=False, default_value=False,\n                                                   input_type=bool, print_value=True)\n    include_registry_events_info = extract_action_param(siemplify, param_name=u\"Include Registry Events Information\",\n                                                        is_mandatory=False, default_value=False,\n                                                        input_type=bool, print_value=True)\n    include_scheduled_task_events_info = extract_action_param(siemplify,\n                                                              param_name=u\"Include Scheduled Task Events Information\",\n                                                              is_mandatory=False, default_value=False,\n                                                              input_type=bool, print_value=True)\n\n    siemplify.LOGGER.info(u\"----------------- Async - Started -----------------\")\n\n    json_results = {}\n    error_entities = []\n    failed_entities = []\n    successful_entities = []\n    output_message = u\"\"\n\n    action_details = json.loads(siemplify.parameters[\"additional_data\"])\n    query_ids = action_details[\"query_ids\"]\n    missing_entities = action_details[\"missing_entities\"]\n    init_failed_entities = action_details[\"failed_entities\"]\n\n    try:\n        sentinel_one_manager = SentinelOneV2Manager(api_root, api_token, verify_ssl)\n        all_completed = True\n\n        # Check if tasks have all completed\n        for entity_identifier, query_id in query_ids.items():\n            try:\n                if not sentinel_one_manager.is_query_completed(query_id):\n                    all_completed = False\n\n            except Exception as e:\n                all_completed = False\n                siemplify.LOGGER.info(u\"Failed to check status of query {}, entity {}\".format(\n                    query_id,\n                    entity_identifier)\n                )\n                siemplify.LOGGER.exception(e)\n                continue\n\n        if not all_completed:\n            siemplify.LOGGER.info(u\"Qeuries have not completed yet. Waiting\")\n            output_message = u\"Queries have not completed yet. Waiting\"\n            result_value = siemplify.parameters[\"additional_data\"]\n            status = EXECUTION_STATE_INPROGRESS\n            siemplify.end(output_message, result_value, status)\n\n        siemplify.LOGGER.info(u\"All queries have completed. Fetching events.\")\n\n        result_value = u\"true\"\n        status = EXECUTION_STATE_COMPLETED\n\n        for entity_identifier, query_id in query_ids.items():\n            try:\n                if sentinel_one_manager.is_query_failed(query_id):\n                    try:\n                        query_status = sentinel_one_manager.get_query_status(query_id)\n\n                        siemplify.LOGGER.error(\n                            u\"Events fetching query {} failed on entity {} with status: {}\".format(\n                                query_id,\n                                entity_identifier,\n                                query_status\n                            )\n                        )\n                        failed_entities.append(entity_identifier)\n                    except Exception as e:\n                        failed_entities.append(entity_identifier)\n                        siemplify.LOGGER.error(\n                            u\"Failed to get failure status of query {} of entity {}\".format(query_id, entity_identifier)\n                        )\n                        siemplify.LOGGER.exception(e)\n\n                else:\n                    # Get the entity that matches the current query ID\n                    entity = get_entity_by_identifier(siemplify, entity_identifier)\n                    error = False\n                    json_results[entity_identifier] = {}\n\n                    # Collect the results of the task\n                    siemplify.LOGGER.info(u\"Collecting results for query {}, entity {}\".format(\n                        query_id, entity_identifier)\n                    )\n\n                    try:\n                        process_events = sentinel_one_manager.get_process_events_by_query_id(\n                            query_id,\n                            limit=limit\n                        )\n                        siemplify.LOGGER.info(\n                            u\"Found {} process events for query {}, entity {}\".format(len(process_events), query_id,\n                                                                              entity.identifier)\n                        )\n\n                        json_results[entity.identifier][u\"process_events\"] = [process_event.to_json() for process_event in process_events]\n\n                        if process_events:\n                            siemplify.result.add_data_table(\n                                u\"Found Processes Events for {}\".format(entity_identifier),\n                                construct_csv([event.to_csv() for event in process_events])\n                            )\n\n                    except Exception as e:\n                        error = True\n                        siemplify.LOGGER.error(\n                            u\"Failed to get process events for query {} and entity {}\".format(query_id,\n                                                                                              entity_identifier))\n                        siemplify.LOGGER.exception(e)\n\n                    if include_file_events_info:\n                        try:\n                            file_events = sentinel_one_manager.get_file_events_by_query_id(\n                                query_id,\n                                limit=limit\n                            )\n                            siemplify.LOGGER.info(\n                                u\"Found {} file events for query {}, entity {}\".format(len(file_events), query_id,\n                                                                                          entity.identifier)\n                            )\n\n                            json_results[entity.identifier][u\"file_events\"] = [file_event.to_json() for file_event in file_events]\n\n                            if file_events:\n                                siemplify.result.add_data_table(\n                                    u\"Found File Events for {}\".format(entity_identifier),\n                                    construct_csv([event.to_csv() for event in file_events])\n                                )\n\n                        except Exception as e:\n                            error = True\n                            siemplify.LOGGER.error(\n                                u\"Failed to get file events for query {} and entity {}\".format(query_id,\n                                                                                                  entity_identifier))\n                            siemplify.LOGGER.exception(e)\n\n                    if include_indicator_events_info:\n                        try:\n                            indicator_events = sentinel_one_manager.get_indicator_events_by_query_id(\n                                query_id,\n                                limit=limit\n                            )\n                            siemplify.LOGGER.info(\n                                u\"Found {} indicator events for query {}, entity {}\".format(len(indicator_events), query_id,\n                                                                                          entity.identifier)\n                            )\n\n                            json_results[entity.identifier][u\"indicator_events\"] = [indicator_event.to_json() for indicator_event in indicator_events]\n\n                            if indicator_events:\n                                siemplify.result.add_data_table(\n                                    u\"Found Indicator Events for {}\".format(entity_identifier),\n                                    construct_csv([event.to_csv() for event in indicator_events])\n                                )\n\n                        except Exception as e:\n                            error = True\n                            siemplify.LOGGER.error(\n                                u\"Failed to get indicator events for query {} and entity {}\".format(query_id,\n                                                                                                  entity_identifier))\n                            siemplify.LOGGER.exception(e)\n\n                    if include_dns_events_info:\n                        try:\n                            dns_events = sentinel_one_manager.get_dns_events_by_query_id(\n                                query_id,\n                                limit=limit\n                            )\n                            siemplify.LOGGER.info(\n                                u\"Found {} dns events for query {}, entity {}\".format(len(dns_events), query_id,\n                                                                                          entity.identifier)\n                            )\n\n                            json_results[entity.identifier][u\"dns_events\"] = [dns_event.to_json() for dns_event in dns_events]\n\n                            if dns_events:\n                                siemplify.result.add_data_table(\n                                    u\"Found DNS Events for {}\".format(entity_identifier),\n                                    construct_csv([event.to_csv() for event in dns_events])\n                                )\n\n                        except Exception as e:\n                            error = True\n                            siemplify.LOGGER.error(\n                                u\"Failed to get dns events for query {} and entity {}\".format(query_id,\n                                                                                                  entity_identifier))\n                            siemplify.LOGGER.exception(e)\n\n                    if include_network_actions_events_info:\n                        try:\n                            network_actions_events = sentinel_one_manager.get_network_actions_events_by_query_id(\n                                query_id,\n                                limit=limit\n                            )\n                            siemplify.LOGGER.info(\n                                u\"Found {} network actions events for query {}, entity {}\".format(\n                                    len(network_actions_events), query_id,\n                                    entity.identifier)\n                            )\n\n                            json_results[entity.identifier][u\"network_actions_events\"] = [network_actions_event.to_json() for network_actions_event in network_actions_events]\n\n                            if network_actions_events:\n                                siemplify.result.add_data_table(\n                                    u\"Found Network Events for {}\".format(entity_identifier),\n                                    construct_csv([event.to_csv() for event in network_actions_events])\n                                )\n\n                        except Exception as e:\n                            error = True\n                            siemplify.LOGGER.error(\n                                u\"Failed to get network actions events for query {} and entity {}\".format(query_id,\n                                                                                                  entity_identifier))\n                            siemplify.LOGGER.exception(e)\n\n                    if include_url_events_info:\n                        try:\n                            url_events = sentinel_one_manager.get_url_events_by_query_id(\n                                query_id,\n                                limit=limit\n                            )\n                            siemplify.LOGGER.info(\n                                u\"Found {} url events for query {}, entity {}\".format(\n                                    len(url_events), query_id,\n                                    entity.identifier)\n                            )\n\n                            json_results[entity.identifier][u\"url_events\"] = [url_event.to_json() for url_event in url_events]\n\n                            if url_events:\n                                siemplify.result.add_data_table(\n                                    u\"Found URL Events for {}\".format(entity_identifier),\n                                    construct_csv([event.to_csv() for event in url_events])\n                                )\n\n                        except Exception as e:\n                            error = True\n                            siemplify.LOGGER.error(\n                                u\"Failed to get url events for query {} and entity {}\".format(query_id,\n                                                                                                  entity_identifier))\n                            siemplify.LOGGER.exception(e)\n\n                    if include_registry_events_info:\n                        try:\n                            registry_events = sentinel_one_manager.get_registry_events_by_query_id(\n                                query_id,\n                                limit=limit\n                            )\n                            siemplify.LOGGER.info(\n                                u\"Found {} registry events for query {}, entity {}\".format(\n                                    len(registry_events), query_id,\n                                    entity.identifier)\n                            )\n\n                            json_results[entity.identifier][u\"registry_events\"] = [registry_event.to_json() for registry_event in registry_events]\n\n                            if registry_events:\n                                siemplify.result.add_data_table(\n                                    u\"Found Registry Events for {}\".format(entity_identifier),\n                                    construct_csv([event.to_csv() for event in registry_events])\n                                )\n\n                        except Exception as e:\n                            error = True\n                            siemplify.LOGGER.error(\n                                u\"Failed to get registry events for query {} and entity {}\".format(query_id,\n                                                                                                  entity_identifier))\n                            siemplify.LOGGER.exception(e)\n\n                    if include_scheduled_task_events_info:\n                        try:\n                            scheduled_task_events = sentinel_one_manager.get_scheduled_task_events_by_query_id(\n                                query_id,\n                                limit=limit\n                            )\n                            siemplify.LOGGER.info(\n                                u\"Found {} scheduled task events for query {}, entity {}\".format(\n                                    len(scheduled_task_events), query_id,\n                                    entity.identifier)\n                            )\n\n                            json_results[entity.identifier][u\"scheduled_task_events\"] = [scheduled_task_event.to_json() for scheduled_task_event in scheduled_task_events]\n\n                            if scheduled_task_events:\n                                siemplify.result.add_data_table(\n                                    u\"Found Scheduled Task Events for {}\".format(entity_identifier),\n                                    construct_csv([event.to_csv() for event in scheduled_task_events])\n                                )\n\n                        except Exception as e:\n                            error = True\n                            siemplify.LOGGER.error(\n                                u\"Failed to get scheduled task events for query {} and entity {}\".format(query_id,\n                                                                                                   entity_identifier))\n                            siemplify.LOGGER.exception(e)\n\n                    if error:\n                        error_entities.append(entity.identifier)\n\n                    else:\n                        successful_entities.append(entity.identifier)\n\n            except Exception as e:\n                failed_entities.append(entity_identifier)\n                siemplify.LOGGER.error(u\"An error occurred on entity {0}\".format(entity_identifier))\n                siemplify.LOGGER.exception(e)\n\n        siemplify.result.add_result_json(convert_dict_to_json_result_dict(json_results))\n\n        if successful_entities:\n            output_message = u\"Successfully fetched events for the following entities:\\n   {}\".format(\n                u\"\\n   \".join([entity for entity in successful_entities])\n            )\n\n        if error_entities:\n            output_message += u\"\\n\\nFailed to fetch one type of events or more on the following entities \" \\\n                              u\"(check logs for details):\\n   {}\".format(\n                u\"\\n   \".join([entity for entity in error_entities])\n            )\n\n        if missing_entities:\n            output_message += u\"\\n\\nThe following entities didn't match any agent and were skipped:\\n   {}\".format(\n                u\"\\n   \".join([entity for entity in missing_entities])\n            )\n\n        if init_failed_entities:\n            output_message += u\"\\n\\nError occurred while initiating events fetching query on the following entities:\\n   {}\".format(\n                u\"\\n   \".join([entity for entity in init_failed_entities])\n            )\n\n        if failed_entities:\n            output_message += u\"\\n\\nEvents fetching has failed on the following entities:\\n   {}\".format(\n                u\"\\n   \".join([entity for entity in failed_entities])\n            )\n\n    except Exception as e:\n        siemplify.LOGGER.error(u\"Error executing action \\\"Get Events For Endpoint Hours Back\\\". Reason: {}\".format(e))\n        siemplify.LOGGER.exception(e)\n        status = EXECUTION_STATE_FAILED\n        result_value = u\"false\"\n        output_message = u\"Error executing action \\\"Get Events For Endpoint Hours Back\\\". Reason: {}\".format(e)\n\n    siemplify.LOGGER.info(u\"----------------- Main - Finished -----------------\")\n    siemplify.LOGGER.info(u\"Status: {}:\".format(status))\n    siemplify.LOGGER.info(u\"Result Value: {}\".format(result_value))\n    siemplify.LOGGER.info(u\"Output Message: {}\".format(output_message))\n    siemplify.end(output_message, result_value, status)\n\n\ndef get_entity_by_identifier(siemplify, entity_identifier):\n    \"\"\"\n    Get Entity object by identifier\n    :param siemplify: {SiemplifyAction}\n    :param entity_identifier: {unicode} The identifier of the entity\n    :return: {Entity} the matching entity\n    \"\"\"\n    for entity in siemplify.target_entities:\n        if entity.identifier == entity_identifier:\n            return entity\n\n    raise Exception(u\"Entity {} was not found\".format(entity_identifier))\n\n\nif __name__ == \"__main__\":\n    if len(sys.argv) < 3 or sys.argv[2] == 'True':\n        main()\n    else:\n        async_action()\n",
  "IntegrationIdentifier": "SentinelOneV2",
  "ScriptResultName": "is_success",
  "DynamicResultsMetadata": [
    {
      "ResultName": "JsonResult",
      "ResultExample": "[{\"EntityResult\": {\"file_events\": [{\"k8sNamespace\": null, \"agentOs\": \"linux\", \"siteName\": \"example.com\", \"eventType\": \"File Rename\", \"pid\": \"5519\", \"fileMd5\": null, \"containerName\": null, \"signatureSignedInvalidReason\": null, \"creation_time_unix_time\": 1585568500495, \"newFileName\": \"/run/systemd/resolve/stub-resolv.conf\", \"agentNetworkStatus\": \"connected\", \"k8sPodLabels\": null, \"agentVersion\": \"3.3.1.14\", \"agentName\": \"ip-1-1-1-1\", \"relatedToThreat\": \"False\", \"containerImage\": null, \"agentId\": \"849867819647755581\", \"id\": \"405732424377630722\", \"createdAt\": \"2020-03-30T11:41:40.495000Z\", \"objectType\": \"file\", \"hasParent\": true, \"signedStatus\": null, \"activeContentFileId\": null, \"fileSha1\": null, \"oldFileSha1\": null, \"fileFullName\": \"/run/systemd/resolve/stub-resolv.conf\", \"fileType\": \"conf\", \"agentGroupId\": \"823740645928657962\", \"agentIsDecommissioned\": false, \"k8sNamespaceLabels\": null, \"processName\": \"systemd-resolved\", \"k8sClusterName\": null, \"k8sControllerType\": null, \"tid\": null, \"agentTimestamp\": \"2020-03-30T11:41:40.495Z\", \"k8sNode\": null, \"fileSha256\": null, \"processStartTime\": \"2020-03-20T06:15:22.588Z\", \"oldFileName\": \"/run/systemd/resolve/.#stub-resolv.confFRlFnD\", \"verifiedStatus\": null, \"containerId\": null, \"oldFileSha256\": null, \"activeContentType\": null, \"convictedBy\": null, \"processUniqueKey\": \"881a00e1-17df-6857-6949-2e69add1bef8\", \"k8sPodName\": null, \"agentMachineType\": \"server\", \"k8sControllerName\": null, \"parentProcessUniqueKey\": \"881a00e1-17df-6857-6949-2e69add1bef8\", \"user\": null, \"fileLocation\": null, \"agentIp\": \"3.136.184.160\", \"agentInfected\": false, \"fileId\": null, \"fileCreatedAt\": \"2020-03-30T11:41:40.495Z\", \"trueContext\": \"0ca54d48-8527-f207-c17d-89b3547b7d22\", \"processDisplayName\": \"systemd-resolved\", \"publisher\": null, \"agentIsActive\": true, \"processGroupId\": \"0ca54d48-8527-f207-c17d-89b3547b7d22\", \"activeContentHash\": null, \"rpid\": null, \"agentUuid\": \"11dd65a0-9b2d-e631-73da-4cc15d6bbc9e\", \"containerLabels\": null, \"agentDomain\": \"\", \"k8sControllerLabels\": null, \"attributes\": [{\"section\": \"Main Attributes\", \"field_id\": \"agentTimestamp\", \"value\": \"2020-03-30T11:41:40.495Z\", \"display\": \"Created At\", \"priority\": 3, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentVersion\", \"value\": \"3.3.1.14\", \"display\": \"Agent Version\", \"priority\": 4, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentUuid\", \"value\": \"11dd65a0-9b2d-e631-73da-4cc15d6bbc9e\", \"display\": \"Agent UUID\", \"priority\": 2, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentName\", \"value\": \"ip-1-1-1-1\", \"display\": \"Agent Name\", \"priority\": 1, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileId\", \"value\": null, \"display\": \"File Id\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileFullName\", \"value\": \"/run/systemd/resolve/stub-resolv.conf\", \"display\": \"Full Path\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"trueContext\", \"value\": \"0ca54d48-8527-f207-c17d-89b3547b7d22\", \"display\": \"True Context\", \"priority\": 7, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileSha1\", \"value\": null, \"display\": \"SHA1\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileMD5\", \"value\": null, \"display\": \"MD5\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"oldFileName\", \"value\": \"/run/systemd/resolve/.#stub-resolv.confFRlFnD\", \"display\": \"Old File Name\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"oldFileMD5\", \"value\": null, \"display\": \"Old File MD5\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"oldFileSHA1\", \"value\": null, \"display\": \"Old File SHA1\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"oldFileSHA256\", \"value\": null, \"display\": \"Old File SHA256\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentOs\", \"value\": \"linux\", \"display\": \"Agent OS\", \"priority\": 3, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"parentPid\", \"value\": null, \"display\": \"Parent PID\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"parentProcessUniqueKey\", \"value\": null, \"display\": \"Parent Process UID\", \"priority\": null, \"display_attribute\": true, \"queryable\": false}, {\"section\": \"Main Attributes\", \"field_id\": \"pid\", \"value\": \"5519\", \"display\": \"Process ID\", \"priority\": 5, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processDisplayName\", \"value\": \"systemd-resolved\", \"display\": \"Process Display Name\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processName\", \"value\": \"systemd-resolved\", \"display\": \"Process Name\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processStartTime\", \"value\": \"2020-03-20T06:15:22.588Z\", \"display\": \"Process Start Time\", \"priority\": null, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Main Attributes\", \"field_id\": \"processUniqueKey\", \"value\": \"881a00e1-17df-6857-6949-2e69add1bef8\", \"display\": \"Process UID\", \"priority\": 6, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"user\", \"value\": null, \"display\": \"Process User Name\", \"priority\": 4, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"rpid\", \"value\": null, \"display\": \"Rpid\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileSHA256\", \"value\": null, \"display\": \"SHA256\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"signatureSignedInvalidReason\", \"value\": null, \"display\": \"Why not verified\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"signedStatus\", \"value\": null, \"display\": \"Signed Status\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"publisher\", \"value\": null, \"display\": \"Publisher\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"siteName\", \"value\": \"Siemplify.co\", \"display\": \"Site Name\", \"priority\": 6, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"tid\", \"value\": null, \"display\": \"Tid\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"verifiedStatus\", \"value\": null, \"display\": \"Verified Status\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentMachineType\", \"value\": \"server\", \"display\": \"Agent Machine Type\", \"priority\": 5, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"objectType\", \"value\": \"file\", \"display\": \"Object Type\", \"priority\": 1, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"eventType\", \"value\": \"File Rename\", \"display\": \"Event Type\", \"priority\": 2, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileSize\", \"value\": null, \"display\": \"File Size\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileType\", \"value\": \"conf\", \"display\": \"File Type\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileLocation\", \"value\": null, \"display\": \"File Location\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentFileId\", \"value\": null, \"display\": \"Active Content File Id\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentPath\", \"value\": null, \"display\": \"Active Content Path\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentHash\", \"value\": null, \"display\": \"Active Content Hash\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentSignedStatus\", \"value\": null, \"display\": \"Active Content Signed Status\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentType\", \"value\": null, \"display\": \"Active Content Type\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sNamespace\", \"value\": null, \"display\": \"Namespace\", \"priority\": 3, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sClusterName\", \"value\": null, \"display\": \"Cluster name\", \"priority\": 1, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sPodName\", \"value\": null, \"display\": \"Pod name\", \"priority\": 8, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerName\", \"value\": null, \"display\": \"Container Name\", \"priority\": 10, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerId\", \"value\": null, \"display\": \"Container ID\", \"priority\": 11, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerImage\", \"value\": null, \"display\": \"Container Image\", \"priority\": 12, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerLabels\", \"value\": null, \"display\": \"Container Labels\", \"priority\": 13, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sPodLabels\", \"value\": null, \"display\": \"Pod Labels\", \"priority\": 9, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sNamespaceLabels\", \"value\": null, \"display\": \"Namespace Labels\", \"priority\": 4, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sNode\", \"value\": null, \"display\": \"Node\", \"priority\": 2, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sControllerLabels\", \"value\": null, \"display\": \"Controller Labels\", \"priority\": 7, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sControllerType\", \"value\": null, \"display\": \"Controller Type\", \"priority\": 5, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sControllerName\", \"value\": null, \"display\": \"Controller Name\", \"priority\": 6, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"convictedBy\", \"value\": null, \"display\": \"Convicted By\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"relatedToThreat\", \"value\": null, \"display\": \"Related To Threat\", \"priority\": 8, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Other Attributes\", \"field_id\": \"threatStatus\", \"value\": null, \"display\": \"threat Status\", \"priority\": null, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Endpoint Info\", \"field_id\": \"siteId\", \"value\": null, \"display\": \"Site ID\", \"priority\": 7, \"display_attribute\": false, \"queryable\": true}], \"activeContentSignedStatus\": null, \"fileModifyAt\": \"2020-03-30T11:41:40.495Z\", \"activeContentPath\": null, \"oldFileMd5\": null, \"fileSize\": null}], \"scheduled_task_events\": [], \"url_events\": [], \"dns_events\": [], \"network_actions_events\": [], \"indicator_events\": [], \"registry_events\": [], \"process_events\": [{\"k8sNamespace\": null, \"siteName\": \"Siemplify.co\", \"eventType\": \"Process Creation\", \"processIsRedirectedCommandProcessor\": \"False\", \"parentProcessName\": \"sh\", \"pid\": \"22572\", \"signatureSignedInvalidReason\": null, \"creation_time_unix_time\": 1585567021358, \"agentNetworkStatus\": \"connected\", \"k8sPodLabels\": null, \"agentVersion\": \"3.3.1.14\", \"processSessionId\": \"0\", \"agentName\": \"ip-1-1-1-1\", \"relatedToThreat\": \"False\", \"containerImage\": null, \"agentId\": \"849867819647755581\", \"id\": \"405732424272773121\", \"createdAt\": \"2020-03-30T11:17:01.358000Z\", \"objectType\": \"process\", \"hasParent\": true, \"signedStatus\": \"unsigned\", \"processCmd\": \" run-parts --report /etc/cron.hourly\", \"agentInfected\": false, \"parentPid\": \"22571\", \"agentGroupId\": \"823740645928657962\", \"agentIsDecommissioned\": false, \"k8sNamespaceLabels\": null, \"processName\": \"run-parts\", \"processIsWow64\": \"False\", \"k8sClusterName\": null, \"k8sControllerType\": null, \"processRoot\": \"False\", \"agentTimestamp\": \"2020-03-30T11:17:01.358Z\", \"k8sNode\": null, \"processStartTime\": \"2020-03-30T11:17:06.594Z\", \"verifiedStatus\": null, \"containerId\": null, \"containerName\": null, \"activeContentFileId\": null, \"convictedBy\": null, \"processUniqueKey\": \"d66864e3-4ce6-7ed7-dc93-ff5bfa359a00\", \"k8sPodName\": null, \"agentMachineType\": \"server\", \"k8sControllerName\": null, \"parentProcessUniqueKey\": \"fdd9a3fe-ebfd-045d-330a-6da2718e3b53\", \"user\": \"unknown\", \"agentIp\": \"3.136.184.160\", \"activeContentType\": null, \"md5\": null, \"publisher\": null, \"trueContext\": \"9b927ab9-825a-1d84-0e4b-6ba4d268ab5a\", \"sha256\": null, \"parentProcessStartTime\": \"2020-03-30T11:17:06.592Z\", \"processDisplayName\": null, \"processIntegrityLevel\": \"INTEGRITY_LEVEL_UNKNOWN\", \"agentIsActive\": true, \"processGroupId\": \"9b927ab9-825a-1d84-0e4b-6ba4d268ab5a\", \"activeContentHash\": null, \"agentUuid\": \"11dd65a0-9b2d-e631-73da-4cc15d6bbc9e\", \"containerLabels\": null, \"agentDomain\": \"\", \"agentOs\": \"linux\", \"processImagePath\": \"/bin/run-parts\", \"attributes\": [{\"section\": \"Main Attributes\", \"field_id\": \"agentTimestamp\", \"value\": \"2020-03-30T11:17:01.358Z\", \"display\": \"Created At\", \"priority\": 3, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentVersion\", \"value\": \"3.3.1.14\", \"display\": \"Agent Version\", \"priority\": 4, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentUuid\", \"value\": \"11dd65a0-9b2d-e631-73da-4cc15d6bbc9e\", \"display\": \"Agent UUID\", \"priority\": 2, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processCmd\", \"value\": \" run-parts --report /etc/cron.hourly\", \"display\": \"Command Line\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentName\", \"value\": \"ip-1-1-1-1\", \"display\": \"Agent Name\", \"priority\": 1, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"trueContext\", \"value\": \"9b927ab9-825a-1d84-0e4b-6ba4d268ab5a\", \"display\": \"True Context\", \"priority\": 7, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processImagePath\", \"value\": \"/bin/run-parts\", \"display\": \"Image Path\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileSha1\", \"value\": \"66df74a1f7cc3509c87d6a190ff90ac86caf440d\", \"display\": \"SHA1\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processImageSha1Hash\", \"value\": \"66df74a1f7cc3509c87d6a190ff90ac86caf440d\", \"display\": \"Image SHA1 Hash\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileMD5\", \"value\": null, \"display\": \"MD5\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentOs\", \"value\": \"linux\", \"display\": \"Agent OS\", \"priority\": 3, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"parentPid\", \"value\": \"22571\", \"display\": \"Parent PID\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"parentProcessName\", \"value\": \"sh\", \"display\": \"Parent Process Name\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"parentProcessStartTime\", \"value\": \"2020-03-30T11:17:06.592Z\", \"display\": \"Parent Process Start Time\", \"priority\": null, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Other Attributes\", \"field_id\": \"processIntegrityLevel\", \"value\": \"INTEGRITY_LEVEL_UNKNOWN\", \"display\": \"Process Integrity Level\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"parentProcessUniqueKey\", \"value\": \"fdd9a3fe-ebfd-045d-330a-6da2718e3b53\", \"display\": \"Parent Process UID\", \"priority\": null, \"display_attribute\": true, \"queryable\": false}, {\"section\": \"Main Attributes\", \"field_id\": \"pid\", \"value\": \"22572\", \"display\": \"Process ID\", \"priority\": 5, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processDisplayName\", \"value\": null, \"display\": \"Process Display Name\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processIsRedirectedCommandProcessor\", \"value\": \"false\", \"display\": \"Process Is Redirected Command Processor\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processIsWow64\", \"value\": \"false\", \"display\": \"Process Is 64 bit\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processName\", \"value\": \"run-parts\", \"display\": \"Process Name\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processRoot\", \"value\": \"false\", \"display\": \"Process Root\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processSessionId\", \"value\": \"0\", \"display\": \"Process Session Id\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processStartTime\", \"value\": \"2020-03-30T11:17:06.594Z\", \"display\": \"Process Start Time\", \"priority\": null, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Other Attributes\", \"field_id\": \"processSubSystem\", \"value\": \"SUBSYSTEM_UNKNOWN\", \"display\": \"Process Sub System\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"processUniqueKey\", \"value\": \"d66864e3-4ce6-7ed7-dc93-ff5bfa359a00\", \"display\": \"Process UID\", \"priority\": 6, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"user\", \"value\": \"unknown\", \"display\": \"Process User Name\", \"priority\": 4, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"rpid\", \"value\": null, \"display\": \"Rpid\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileSHA256\", \"value\": null, \"display\": \"SHA256\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"signatureSignedInvalidReason\", \"value\": null, \"display\": \"Why not verified\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"signedStatus\", \"value\": \"unsigned\", \"display\": \"Signed Status\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"publisher\", \"value\": null, \"display\": \"Publisher\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"siteName\", \"value\": \"example.com\", \"display\": \"Site Name\", \"priority\": 6, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"tid\", \"value\": null, \"display\": \"Tid\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"verifiedStatus\", \"value\": null, \"display\": \"Verified Status\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentMachineType\", \"value\": \"server\", \"display\": \"Agent Machine Type\", \"priority\": 5, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"objectType\", \"value\": \"process\", \"display\": \"Object Type\", \"priority\": 1, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"eventType\", \"value\": \"Process Creation\", \"display\": \"Event Type\", \"priority\": 2, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentFileId\", \"value\": null, \"display\": \"Active Content File Id\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentPath\", \"value\": null, \"display\": \"Active Content Path\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentHash\", \"value\": null, \"display\": \"Active Content Hash\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentSignedStatus\", \"value\": null, \"display\": \"Active Content Signed Status\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentType\", \"value\": null, \"display\": \"Active Content Type\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sNamespace\", \"value\": null, \"display\": \"Namespace\", \"priority\": 3, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sClusterName\", \"value\": null, \"display\": \"Cluster name\", \"priority\": 1, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sPodName\", \"value\": null, \"display\": \"Pod name\", \"priority\": 8, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerName\", \"value\": null, \"display\": \"Container Name\", \"priority\": 10, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerId\", \"value\": null, \"display\": \"Container ID\", \"priority\": 11, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerImage\", \"value\": null, \"display\": \"Container Image\", \"priority\": 12, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerLabels\", \"value\": null, \"display\": \"Container Labels\", \"priority\": 13, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sPodLabels\", \"value\": null, \"display\": \"Pod Labels\", \"priority\": 9, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sNamespaceLabels\", \"value\": null, \"display\": \"Namespace Labels\", \"priority\": 4, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sNode\", \"value\": null, \"display\": \"Node\", \"priority\": 2, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sControllerLabels\", \"value\": null, \"display\": \"Controller Labels\", \"priority\": 7, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sControllerType\", \"value\": null, \"display\": \"Controller Type\", \"priority\": 5, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sControllerName\", \"value\": null, \"display\": \"Controller Name\", \"priority\": 6, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"convictedBy\", \"value\": null, \"display\": \"Convicted By\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"relatedToThreat\", \"value\": null, \"display\": \"Related To Threat\", \"priority\": 8, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Other Attributes\", \"field_id\": \"threatStatus\", \"value\": null, \"display\": \"threat Status\", \"priority\": null, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Endpoint Info\", \"field_id\": \"siteId\", \"value\": null, \"display\": \"Site ID\", \"priority\": 7, \"display_attribute\": false, \"queryable\": true}], \"activeContentSignedStatus\": null, \"processSubSystem\": \"SUBSYSTEM_UNKNOWN\", \"activeContentPath\": null, \"k8sControllerLabels\": null, \"processImageSha1Hash\": \"66df74a1f7cc3509c87d6a190ff90ac86caf440d\"}, {\"k8sNamespace\": null, \"siteName\": \"example.com\", \"eventType\": \"Process Creation\", \"processIsRedirectedCommandProcessor\": \"False\", \"parentProcessName\": \"cron\", \"pid\": \"22571\", \"signatureSignedInvalidReason\": null, \"creation_time_unix_time\": 1585567021357, \"agentNetworkStatus\": \"connected\", \"k8sPodLabels\": null, \"agentVersion\": \"3.3.1.14\", \"processSessionId\": \"0\", \"agentName\": \"ip-1-1-1-1\", \"relatedToThreat\": \"False\", \"containerImage\": null, \"agentId\": \"849867819647755581\", \"id\": \"405732424272773120\", \"createdAt\": \"2020-03-30T11:17:01.357000Z\", \"objectType\": \"process\", \"hasParent\": true, \"signedStatus\": \"unsigned\", \"processCmd\": \" /bin/sh -c    cd / && run-parts --report /etc/cron.hourly\", \"agentInfected\": false, \"parentPid\": \"22570\", \"agentGroupId\": \"823740645928657962\", \"agentIsDecommissioned\": false, \"k8sNamespaceLabels\": null, \"processName\": \"sh\", \"processIsWow64\": \"False\", \"k8sClusterName\": null, \"k8sControllerType\": null, \"processRoot\": \"False\", \"agentTimestamp\": \"2020-03-30T11:17:01.357Z\", \"k8sNode\": null, \"processStartTime\": \"2020-03-30T11:17:06.592Z\", \"verifiedStatus\": null, \"containerId\": null, \"containerName\": null, \"activeContentFileId\": null, \"convictedBy\": null, \"processUniqueKey\": \"fdd9a3fe-ebfd-045d-330a-6da2718e3b53\", \"k8sPodName\": null, \"agentMachineType\": \"server\", \"k8sControllerName\": null, \"parentProcessUniqueKey\": \"7f8cf978-36bf-b882-63fe-a6e21f5628b9\", \"user\": \"unknown\", \"agentIp\": \"1.1.1.1\", \"activeContentType\": null, \"md5\": null, \"publisher\": null, \"trueContext\": \"9b927ab9-825a-1d84-0e4b-6ba4d268ab5a\", \"sha256\": null, \"parentProcessStartTime\": \"2020-03-30T11:17:06.589Z\", \"processDisplayName\": null, \"processIntegrityLevel\": \"INTEGRITY_LEVEL_UNKNOWN\", \"agentIsActive\": true, \"processGroupId\": \"9b927ab9-825a-1d84-0e4b-6ba4d268ab5a\", \"activeContentHash\": null, \"agentUuid\": \"11dd65a0-9b2d-e631-73da-4cc15d6bbc9e\", \"containerLabels\": null, \"agentDomain\": \"\", \"agentOs\": \"linux\", \"processImagePath\": \"/bin/sh\", \"attributes\": [{\"section\": \"Main Attributes\", \"field_id\": \"agentTimestamp\", \"value\": \"2020-03-30T11:17:01.357Z\", \"display\": \"Created At\", \"priority\": 3, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentVersion\", \"value\": \"3.3.1.14\", \"display\": \"Agent Version\", \"priority\": 4, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentUuid\", \"value\": \"11dd65a0-9b2d-e631-73da-4cc15d6bbc9e\", \"display\": \"Agent UUID\", \"priority\": 2, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processCmd\", \"value\": \" /bin/sh -c    cd / && run-parts --report /etc/cron.hourly\", \"display\": \"Command Line\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentName\", \"value\": \"ip-1-1-1-1\", \"display\": \"Agent Name\", \"priority\": 1, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"trueContext\", \"value\": \"9b927ab9-825a-1d84-0e4b-6ba4d268ab5a\", \"display\": \"True Context\", \"priority\": 7, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processImagePath\", \"value\": \"/bin/sh\", \"display\": \"Image Path\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileSha1\", \"value\": null, \"display\": \"SHA1\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processImageSha1Hash\", \"value\": null, \"display\": \"Image SHA1 Hash\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileMD5\", \"value\": null, \"display\": \"MD5\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentOs\", \"value\": \"linux\", \"display\": \"Agent OS\", \"priority\": 3, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"parentPid\", \"value\": \"22570\", \"display\": \"Parent PID\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"parentProcessName\", \"value\": \"cron\", \"display\": \"Parent Process Name\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"parentProcessStartTime\", \"value\": \"2020-03-30T11:17:06.589Z\", \"display\": \"Parent Process Start Time\", \"priority\": null, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Other Attributes\", \"field_id\": \"processIntegrityLevel\", \"value\": \"INTEGRITY_LEVEL_UNKNOWN\", \"display\": \"Process Integrity Level\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"parentProcessUniqueKey\", \"value\": \"7f8cf978-36bf-b882-63fe-a6e21f5628b9\", \"display\": \"Parent Process UID\", \"priority\": null, \"display_attribute\": true, \"queryable\": false}, {\"section\": \"Main Attributes\", \"field_id\": \"pid\", \"value\": \"22571\", \"display\": \"Process ID\", \"priority\": 5, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processDisplayName\", \"value\": null, \"display\": \"Process Display Name\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processIsRedirectedCommandProcessor\", \"value\": \"false\", \"display\": \"Process Is Redirected Command Processor\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processIsWow64\", \"value\": \"false\", \"display\": \"Process Is 64 bit\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processName\", \"value\": \"sh\", \"display\": \"Process Name\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processRoot\", \"value\": \"false\", \"display\": \"Process Root\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processSessionId\", \"value\": \"0\", \"display\": \"Process Session Id\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"processStartTime\", \"value\": \"2020-03-30T11:17:06.592Z\", \"display\": \"Process Start Time\", \"priority\": null, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Other Attributes\", \"field_id\": \"processSubSystem\", \"value\": \"SUBSYSTEM_UNKNOWN\", \"display\": \"Process Sub System\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"processUniqueKey\", \"value\": \"fdd9a3fe-ebfd-045d-330a-6da2718e3b53\", \"display\": \"Process UID\", \"priority\": 6, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"user\", \"value\": \"unknown\", \"display\": \"Process User Name\", \"priority\": 4, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"rpid\", \"value\": null, \"display\": \"Rpid\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"fileSHA256\", \"value\": null, \"display\": \"SHA256\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"signatureSignedInvalidReason\", \"value\": null, \"display\": \"Why not verified\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"signedStatus\", \"value\": \"unsigned\", \"display\": \"Signed Status\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"publisher\", \"value\": null, \"display\": \"Publisher\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"siteName\", \"value\": \"example.com\", \"display\": \"Site Name\", \"priority\": 6, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"tid\", \"value\": null, \"display\": \"Tid\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"verifiedStatus\", \"value\": null, \"display\": \"Verified Status\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Endpoint Info\", \"field_id\": \"agentMachineType\", \"value\": \"server\", \"display\": \"Agent Machine Type\", \"priority\": 5, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"objectType\", \"value\": \"process\", \"display\": \"Object Type\", \"priority\": 1, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"eventType\", \"value\": \"Process Creation\", \"display\": \"Event Type\", \"priority\": 2, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentFileId\", \"value\": null, \"display\": \"Active Content File Id\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentPath\", \"value\": null, \"display\": \"Active Content Path\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentHash\", \"value\": null, \"display\": \"Active Content Hash\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentSignedStatus\", \"value\": null, \"display\": \"Active Content Signed Status\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"activeContentType\", \"value\": null, \"display\": \"Active Content Type\", \"priority\": null, \"display_attribute\": false, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sNamespace\", \"value\": null, \"display\": \"Namespace\", \"priority\": 3, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sClusterName\", \"value\": null, \"display\": \"Cluster name\", \"priority\": 1, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sPodName\", \"value\": null, \"display\": \"Pod name\", \"priority\": 8, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerName\", \"value\": null, \"display\": \"Container Name\", \"priority\": 10, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerId\", \"value\": null, \"display\": \"Container ID\", \"priority\": 11, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerImage\", \"value\": null, \"display\": \"Container Image\", \"priority\": 12, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"containerLabels\", \"value\": null, \"display\": \"Container Labels\", \"priority\": 13, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sPodLabels\", \"value\": null, \"display\": \"Pod Labels\", \"priority\": 9, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sNamespaceLabels\", \"value\": null, \"display\": \"Namespace Labels\", \"priority\": 4, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sNode\", \"value\": null, \"display\": \"Node\", \"priority\": 2, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sControllerLabels\", \"value\": null, \"display\": \"Controller Labels\", \"priority\": 7, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sControllerType\", \"value\": null, \"display\": \"Controller Type\", \"priority\": 5, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Container Attributes\", \"field_id\": \"k8sControllerName\", \"value\": null, \"display\": \"Controller Name\", \"priority\": 6, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Other Attributes\", \"field_id\": \"convictedBy\", \"value\": null, \"display\": \"Convicted By\", \"priority\": null, \"display_attribute\": true, \"queryable\": true}, {\"section\": \"Main Attributes\", \"field_id\": \"relatedToThreat\", \"value\": null, \"display\": \"Related To Threat\", \"priority\": 8, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Other Attributes\", \"field_id\": \"threatStatus\", \"value\": null, \"display\": \"threat Status\", \"priority\": null, \"display_attribute\": false, \"queryable\": false}, {\"section\": \"Endpoint Info\", \"field_id\": \"siteId\", \"value\": null, \"display\": \"Site ID\", \"priority\": 7, \"display_attribute\": false, \"queryable\": true}], \"activeContentSignedStatus\": null, \"processSubSystem\": \"SUBSYSTEM_UNKNOWN\", \"activeContentPath\": null, \"k8sControllerLabels\": null, \"processImageSha1Hash\": null}]}, \"Entity\": \"ip-1-1-1-1\"}]",
      "ShowResult": true
    }
  ],
  "Creator": "Admin",
  "IsEnabled": true,
  "IsCustom": true,
  "IsSystem": false,
  "Version": 2.0,
  "TimeoutSeconds": 600,
  "Parameters": [
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "FALSE",
      "Description": "Specify to get information about Scheduled Task events.",
      "Name": "Include Scheduled Task Events Information",
      "Value": "FALSE",
      "Type": 1,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1590908125614,
      "ModificationTimeUnixTimeInMs": 1590908125614
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "FALSE",
      "Description": "Specify to get information about Registry events.",
      "Name": "Include Registry Events Information",
      "Value": "FALSE",
      "Type": 1,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1590908125614,
      "ModificationTimeUnixTimeInMs": 1590908125614
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "FALSE",
      "Description": "Specify to get information about URL  events.",
      "Name": "Include URL Events Information",
      "Value": "FALSE",
      "Type": 1,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1590908125614,
      "ModificationTimeUnixTimeInMs": 1590908125614
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "FALSE",
      "Description": "Specify to get information about Network Actions events.",
      "Name": "Include Network Actions Events Information",
      "Value": "FALSE",
      "Type": 1,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1590908125614,
      "ModificationTimeUnixTimeInMs": 1590908125614
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "FALSE",
      "Description": "Specify to get information about DNS events.",
      "Name": "Include DNS Events Information",
      "Value": "FALSE",
      "Type": 1,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1590908125614,
      "ModificationTimeUnixTimeInMs": 1590908125614
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "FALSE",
      "Description": "Specify to get information about Indicator events.",
      "Name": "Include Indicator Events Information",
      "Value": "FALSE",
      "Type": 1,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1590908125614,
      "ModificationTimeUnixTimeInMs": 1590908125614
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "FALSE",
      "Description": "Specify to get information about File events.",
      "Name": "Include File Events Information",
      "Value": "FALSE",
      "Type": 1,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1590908125614,
      "ModificationTimeUnixTimeInMs": 1590908125614
    },
    {
      "CustomActionId": 0,
      "IsMandatory": false,
      "DefaultValue": "50",
      "Description": "Specify how many events to return per event type.",
      "Name": "Events Amount Limit",
      "Value": "50",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1590908125614,
      "ModificationTimeUnixTimeInMs": 1590908125614
    },
    {
      "CustomActionId": 0,
      "IsMandatory": true,
      "DefaultValue": "",
      "Description": "Fetch events from X hours backwards.",
      "Name": "Hours Back",
      "Value": "",
      "Type": 0,
      "OptionalValues": null,
      "OptionalValuesJson": null,
      "Id": 0,
      "CreationTimeUnixTimeInMs": 1590908125614,
      "ModificationTimeUnixTimeInMs": 1590908125614
    }
  ],
  "DefaultResultValue": null,
  "PythonVersion": "None",
  "Id": 0,
  "CreationTimeUnixTimeInMs": 1588021981912,
  "ModificationTimeUnixTimeInMs": 1590908125604
}